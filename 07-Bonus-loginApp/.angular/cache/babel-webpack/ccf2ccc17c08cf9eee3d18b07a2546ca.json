{"ast":null,"code":"import _classCallCheck from \"C:/Users/ezequ/Desktop/Angular/07-Bonus-loginApp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/ezequ/Desktop/Angular/07-Bonus-loginApp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var AuthService = /*#__PURE__*/(function () {\n  var AuthService = /*#__PURE__*/function () {\n    // new user\n    // https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=[API_KEY]\n    // login\n    // https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=[API_KEY]\n    function AuthService(http) {\n      _classCallCheck(this, AuthService);\n\n      this.http = http;\n      this.url = 'https://identitytoolkit.googleapis.com/v1/accounts:';\n      this.apiKey = 'AIzaSyDq-j9B3kF4w3KswIal3cKOlH-3brGS8Rg';\n      this.loadToken();\n    }\n\n    _createClass(AuthService, [{\n      key: \"logout\",\n      value: function logout() {\n        localStorage.removeItem('token');\n      }\n    }, {\n      key: \"login\",\n      value: function login(user) {\n        var _this = this;\n\n        var authData = {\n          email: user.email,\n          password: user.password,\n          returnSecureToken: true\n        };\n        return this.http.post(\"\".concat(this.url, \"signInWithPassword?key=\").concat(this.apiKey), authData).pipe(map(function (resp) {\n          _this.saveToken(resp['idToken']);\n\n          return resp;\n        }));\n      }\n    }, {\n      key: \"newUser\",\n      value: function newUser(user) {\n        var _this2 = this;\n\n        var authData = {\n          email: user.email,\n          password: user.password,\n          returnSecureToken: true\n        };\n        return this.http.post(\"\".concat(this.url, \"signUp?key=\").concat(this.apiKey), authData).pipe(map(function (resp) {\n          _this2.saveToken(resp['idToken']);\n\n          return resp;\n        }));\n      }\n    }, {\n      key: \"saveToken\",\n      value: function saveToken(idToken) {\n        this.userToken = idToken;\n        localStorage.setItem('token', idToken);\n        var today = new Date();\n        today.setSeconds(3600);\n        localStorage.setItem('Expires', today.getTime().toString());\n      }\n    }, {\n      key: \"loadToken\",\n      value: function loadToken() {\n        if (localStorage.getItem('token')) {\n          this.userToken = localStorage.getItem('token');\n        } else {\n          this.userToken = '';\n        }\n      }\n    }, {\n      key: \"isAuthenticate\",\n      value: function isAuthenticate() {\n        return this.userToken.length > 2;\n      }\n    }]);\n\n    return AuthService;\n  }();\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}